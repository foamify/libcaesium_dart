// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.4.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

/// Compresses an image file, accepts jpeg, png, gif, webp, and tiff
///
/// # Arguments
///
/// * `input_path` - Image file input path
/// * `output_path` - Output file path (must be put in an existing directory)
/// * `quality` - Compression quality
/// * `png_optimization_level` -  if optimization is true will set the level of oxipng optimization, from 1 to 6. Default 3.
/// * `keep_metadata` - Keep metadata or discard
/// * `optimize` - Optimize image size, don't use for webp, the format is tricky
/// * `max_output_size` - (Optional) Maximum output size in bytes
Future<void> compress(
        {required String inputPath,
        required String outputPath,
        required int quality,
        required int pngOptimizationLevel,
        required bool keepMetadata,
        required bool optimize,
        BigInt? maxOutputSize}) =>
    RustLib.instance.api.crateApiSimpleCompress(
        inputPath: inputPath,
        outputPath: outputPath,
        quality: quality,
        pngOptimizationLevel: pngOptimizationLevel,
        keepMetadata: keepMetadata,
        optimize: optimize,
        maxOutputSize: maxOutputSize);
